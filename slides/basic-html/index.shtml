<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>INFO 343 HTML</title>
        <meta name="description" content="HTML Lecture">
        <meta name="author" content="David Stearns">

        <!--#include virtual="../inc/common-head.html" -->
    </head>
    <body>
        <div class="reveal">
            <div class="slides">

                <section>
                    <h2>Coming Up...</h2>
                    <p class="pull-right"><img src="../../img/css3.png" alt="CSS3 Logo"></p>
                    <ul>
                        <li>Thursday: Intro to CSS
                            <ul>
                                <li>Read these before:</li>
                                <li><a href="http://webdesign.tutsplus.com/tutorials/htmlcss-tutorials/the-best-way-to-learn-css-2/">The Best Way to Learn CSS</a></li>
                                <li><a href="http://alistapart.com/article/understandingprogressiveenhancement">Understanding Progressive Enhancement</a></li>
                                <li><a href="http://www.smashingmagazine.com/2010/01/28/color-theory-for-designers-part-1-the-meaning-of-color/">Color Theory for Designers</a> <br> (Part I, II, and III)</li>
                            </ul>
                        </li>
                        <li>Friday Lab: Building a Basic Web Site
                            <ul>
                                <li>Don't forget to logoff of lab machines!</li>
                            </ul>
                        </li>
                    </ul>
                </section>

                <section>
                    <h2>Today:</h2>
                    <h2>Saying What You Mean</h2>
                    <ul>
                        <li>Lab 1 Debrief and More on VCS</li>
                        <li>Semantics vs Presentation</li>
                        <li>HTML Syntax and Structure Review</li>
                        <li>Tour of Semantic and Meta-Data Elements</li>
                        <li>Practice Using Semantic and Meta-Data Elements</li>
                        <li>Segmenting and Reusing Common Content</li>
                    </ul>
                    <p><img src="../../img/html5.png" alt="HTML5 Logo"></p>
                </section>

                <section>
                    <h2>Lab 1 Debrief</h2>
                    <p><em>Ask the person next to you...</em></p>
                    <p>Did you understand what the version control tools (SourceTree &amp; GitHub) were doing?</p>
                    <p><img src="../../img/lab-large.png" alt="Lab icon"></p>
                </section>

                <section>
                    <h3>Version Control Systems (VCSs)</h3>
                    <ul>
                        <li>What was the VCS actually doing?</li>
                        <li>How was that different from the FTP tool (FileZilla)?</li>
                        <li>Why should I use a VCS? Why not just FTP?</li>
                    </ul>
                </section>

                <section>
                    <p>VCSs manage files stored in <dfn>repositories</dfn>.</p>
                    <p class="fragment">A repository is a database that tracks <dfn>changes</dfn> made to files within it. Changes are tracked at the <dfn>line</dfn> level.</p>
                    <p class="fragment">Repositories record only the changes you explicitly <dfn>commit</dfn> to them. These changes are called a "<dfn>diff</dfn>."</p>
                    <p class="fragment">Most VCSs allow you to commit changes from some files but not others. In Git, this is what the <dfn>staging</dfn> area is for.</p>
                </section>

                <section>
                    <p><img src="img/commit.png" alt="diagram showing commit to a local repository"></p>
                </section>

                <section>
                    <p><img src="img/checkout.png" alt="diagram showing recovery of previous commit"></p>
                </section>

                <section>
                    <p>A <dfn>distributed VCS</dfn> like Git allows multiple repositories to be linked to each other.</p>
                    <p class="fragment">Teams typically use a single shared repository on the network as their <dfn>master repository</dfn>, and all devs <dfn>clone</dfn> that repository to their local machines.</p>
                    <p class="fragment">Commits can be <dfn>pushed</dfn> from local to remote or <dfn>pulled</dfn> from remote to local.</p>
                    <p class="fragment"><dfn>GitHub</dfn> is a popular network repository service for open source development.</p>
                </section>

                <section>
                    <p><img src="img/github.png" alt="diagram showing distributed development using Git and GitHub"></p>
                </section>

                <section>
                    <p>An <dfn>FTP tool</dfn> simply moves files from one machine to another.</p>
                    <p class="fragment">Similar to Windows File Explorer with network drives, but works with Unix servers.</p>
                    <p class="fragment">FTP doesn't track changes; it simply overwrites.</p>
                    <p class="fragment">Unless you explicitly save previous versions, you can't rollback.</p>
                    <p class="fragment">FTP can't coordinate changes made by multiple people.</p>
                    <p class="fragment">FTP can't tell you which files have changed since your last copy, nor which files are out of date.</p>
                </section>

                <section>
                    <p>So why should I use a VCS?</p>
                    <ul class="fragment">
                        <li>Tracks all committed changes throughout life of project</li>
                        <li>Enables easy rollback to previous commit states</li>
                        <li>Enables parallel team development with offsite backup</li>
                        <li>Makes deployment (aka publishing) easier</li>
                    </ul>
                </section>

                <section>
                    <p><img src="img/publish-git.png" alt="diagram showing publishing site with git"></p>
                </section>

                <section>
                    <p><img src="img/update-git.png" alt="diagram showing updating site with git"></p>
                </section>

                <section>
                    <h2>Semantics &ne; Presentation</h2>
                    <p class="fragment">Separate meaning from formatting</p>
                    <p class="fragment">Separate data from representation</p>
                    <p class="fragment">This is a basic programming principle</p>
                </section>

                <section>
                    <p>Tim Berners-Lee with an early web browser (CERN 1991)</p>
                    <p><img src="img/bernerslee.jpg" alt="Tim Berners-Lee"></p>
                </section>

                <section>
                    <p>The <a href="http://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/Tags.html">first version of HTML</a> was very simple and almost entirely semantic</p>
                    <pre><code>
&lt;h1&gt;Tim Berners-Lee&lt;/h1&gt;
&lt;p&gt;The guy who invented HTTP, HTML, and URLs&lt;/p&gt;
&lt;p&gt;Did this while he worked at 
    &lt;a href=&quot;http://home.web.cern.ch/&quot;&gt;CERN&lt;/a&gt;
&lt;/p&gt;
                    </code></pre>
                </section>


                <section>
                    <p>But then people started adding new tags to control formatting</p>
                    <pre><code>
&lt;body bgcolor=&quot;black&quot;&gt;
    &lt;font face=&quot;Comic Sans&quot; size=&quot;3&quot; color=&quot;white&quot;&gt;
        &lt;p&gt;Nice font, but how do I maintain this?&lt;/p&gt;
    &lt;/font&gt;
&lt;/body&gt;
                    </code></pre>
                </section>

                <section>
                    <p>And other really stupid and annoying tags like <code>&lt;blink&gt;</code> and <code>&lt;marquee&gt;</code></p>
                    <pre><code>
&lt;body bgcolor=&quot;black&quot;&gt;
    &lt;font face=&quot;Comic Sans&quot; size=&quot;3&quot; color=&quot;white&quot;&gt;
        &lt;blink&gt;
            &lt;p&gt;Arrrrrrgggggghhhhhh!!!!! 
            Who thought this was a good idea!&lt;/p&gt;
        &lt;/blink&gt;
    &lt;/font&gt;
&lt;/body&gt;
                    </code></pre>
                </section>

                <section>
                    <p><img src="img/css.jpg" alt="CSS Logo"></p>
                    <p>to the rescue!</p>
                </section>

                <section>
                    <p>CSS separated presentation from semantics</p>
                    <p class="file-label">css/styles.css</p>
                    <pre><code>
    body {
        background-color: black;
    }
    p {
        font-family: &#039;Comic Sans&#039;, sans-serif;
        font-size: 18px;
        color: white;
    }
                    </code></pre>

                    <p class="file-label">index.html</p>
                    <pre><code>
    &lt;head&gt;
    ...
        &lt;link rel=&quot;stylesheet&quot; href=&quot;css/styles.css&quot;&gt;
    &lt;/head&gt;

    &lt;body&gt;
        &lt;p&gt;This is my paragraph&lt;/p&gt;
    &lt;/body&gt;
                    </code></pre>
                </section>

                <section>
                    <p>XML enabled custom vocabularies with HTML-like syntax</p>
                    <pre><code>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;menu type=&quot;breakfast&quot; xmlns=&quot;menus.com&quot;&gt;
    &lt;food&gt;
        &lt;name&gt;Pigs in Blanket&lt;/name&gt;
        &lt;price&gt;$9.95&lt;/price&gt;
        &lt;description&gt;
            Sausages wrapped in pancakes
        &lt;/description&gt;
        &lt;calories&gt;1,000,000&lt;/calories&gt;
        &lt;effects&gt;cardiac arrest likely&lt;/effects&gt;
    &lt;/food&gt;
&lt;/menu&gt;
                    </code></pre>
                </section>

                <section>
                    <p>Maybe HTML should just be an XML vocabulary? XHTML!</p>
                    <pre><code>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE html
PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;
&quot;DTD/xhtml1-strict.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en&quot; lang=&quot;en&quot;&gt;
    ...
    &lt;img src=&quot;img/cat.jpg&quot; alt=&quot;cat&quot; /&gt; &lt;!-- must self close --&gt;

    <!-- all attrs must have a value, even if totally redundant -->
    &lt;button disabled=&quot;disabled&quot;&gt;Place Order&lt;/button&gt;

    &lt;p&gt;One character out of place and your page won't load!&lt;/p&gt;
    &lt;p&gt;And who can remember all that crap at the beginning?&lt;/p&gt;
    &lt;p&gt;Arrrrrrgggggghhhhhh!!!!!&lt;/p&gt;
    ...
&lt;/html&gt;
                    </code></pre>
                </section>

                <section>
                    <p>After a minor rebellion, clearer heads prevailed</p>
                    <p><img src="../../img/html5.png" alt="HTML5 Logo"></p>
                    <p>Lucky you!</p>
                </section>

                <section>
                    <h2>HTML 5 Syntax and Structure</h2>
                    <p>HTML gives <em>meaning</em> to otherwise plain text</p>
                </section>

                <section>
                    <h2>Doctype Declaration</h2>
                    <p>Tells your browser what kind of document this is</p>
                    <pre><code>
&lt;!doctype html&gt;
                    </code></pre>
                    <p>This is the doctype for HTML5 documents</p>
                    <p>Quite a bit nicer than the XHTML one!</p>
                </section>

                <section>
                    <p>The rest of the document contains a hierarchical tree of <dfn>elements</dfn></p>
                    <p class="fragment">Each element may contain one or more <dfn>attributes</dfn>, as well as <dfn>content</dfn></p>
                    <p class="fragment">Content may be <dfn>plain text</dfn>, or other elements</p>
                    <p class="fragment">Except for a few special cases, extra <dfn>white space</dfn> is ignored</p>
                </section>

                <section>
                    <h2>Elements</h2>
                    <p>Give meaning to their content</p>
                    <p>Marked by a &lt;start-tag&gt; and an &lt;/end-tag&gt;</p>
                    <p>May contain sub-elements</p>
                    <pre><code>
&lt;p&gt;
    As Abraham Lincoln was fond of saying:
&lt;/p&gt;
<blockquote>
    <p>If I ever want to verify a quote, I 
        <strong>
            go look it up on 
            <a href="http://www.google.com">Google!</a>
        </strong>
    </p>
</blockquote>
                    </code></pre>
                </section>

                <section>
                    <h2>Elements</h2>
                    <p>Some elements do not require an end tag because they can't have any content</p>
                    <p>These are often called "self-closing" tags</p>
                    <pre><code>
&lt;!-- img tag may not contain any content --&gt;
&lt;img src=&quot;img/cat.jpg&quot; alt=&quot;cute cat&quot;&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Attributes</h2>
                    <p>Extends the element with additional information or options</p>
                    <p>Syntax: name="value"</p>
                    <pre><code>
&lt;element attribute="value" attribute="value"&gt;
    ...content...
&lt;/element&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Attributes</h2>
                    <p>Some attributes are merely markers, and don't need a value</p>
                    <pre><code>
&lt;button id="mybutton" disabled&gt;
    ...content...
&lt;/button&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Comments</h2>
                    <p>Downloaded to client, but not interpreted nor displayed</p>
                    <pre><code>
&lt;!-- this is a comment --&gt;
&lt;!-- 
    &lt;p&gt;This markup is commented out for testing&lt;/p&gt;
--&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Basic Document Structure</h2>
                    <pre><code>
&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
    &lt;head&gt;
        ... non-visible info about the page ...
        ... links to supporting files ...
    &lt;/head&gt;
    &lt;body&gt;
        ... visible content ...
    &lt;/body&gt;
&lt;/html&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Tree of Elements</h2>
                    <div class="two-column">
                        <pre><code>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;My Page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt; 
            &lt;strong&gt;
            Hello World!
            &lt;/strong&gt;
        &lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;                            
                        </code></pre>

                        <ul class="element-tree">
                            <li>html
                                <ul>
                                    <li>head
                                        <ul>
                                            <li>title</li>
                                        </ul>
                                    </li>
                                    <li>body
                                        <ul>
                                            <li>p
                                                <ul>
                                                    <li>strong</li>
                                                </ul>
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </section>


                <section>
                    <h2>HTML 5 Semantic Tags</h2>
                    <p><a target="_blank" href="../../examples/html/reference.shtml">HTML Semantic Reference</a></p>
                </section>

                <section>
                    <h2>HTML 5 Meta-Data Tags</h2>
                    <p><a target="_blank" href="../../examples/html/meta-data.shtml">HTML Meta-Data Reference</a></p>
                </section>

                <section>
                    <h2>HTML 5 Character Entities</h2>
                    <p>Enables literal use of reserved or extended characters and symbols</p>
                    <pre><code>
&lt;!-- will appear in the browser as &#039;100 &lt; 50&#039; --&gt;
&lt;p&gt;100 &amp;gt; 50&lt;/p&gt;

<!-- will appear as copyright symbol -->
&lt;p&gt;&amp;copy;&lt;/p&gt;
                    </code></pre>
                    <p><a target="_blank" href="http://dev.w3.org/html5/html-author/charref">HTML Character Entities Reference</a></p>
                </section>

                <section>
                    <h2>Time to Practice!</h2>
                </section>

                <section>
                    <h2>Segmenting and Reusing Common Content</h2>
                    <p><a target="_blank" href="http://httpd.apache.org/docs/2.2/howto/ssi.html">Apache Server-Side Includes</a></p>
                </section>

                <section>
                    <p>When building several related pages for a site, you often want to have the same bits of content on every page</p>
                    <p class="fragment">Common headers, site navigation bars, and footers</p>
                    <p class="fragment">Common sets of <code>&lt;link&gt;</code> or <code>&lt;meta&gt;</code> tags in the <code>&lt;head&gt;</code></p>
                </section>

                <section>
                    <h2>The <dfn>DRY</dfn> Principle</h2>
                    <p>Don't Repeat Yourself!</p>
                    <p class="fragment">Common content should be defined only once</p>
                    <p class="fragment">Basic principle of all programming, not just web programming</p>
                </section>

                <section>
                    <p>The Apache web server makes it easy to be DRY</p>
                    <p>with <dfn>Server Side Includes (SSIs)</dfn></p>
                    <p class="file-label">inc/header.html</p>
                    <pre><code>
    &lt;!-- just tags for header content, not full page --&gt;
    &lt;header&gt;
        &lt;h1&gt;My Common Header&lt;/h1&gt;
        &lt;p&gt;for my site&lt;/p&gt;        
    &lt;/header&gt;
                    </code></pre>
                    <p class="file-label">index.shtml</p>
                    <pre><code>
    &lt;!-- full page --&gt;
    &lt;html&gt;
    ...
        &lt;body&gt;
            &lt;!--#include virtual=&quot;inc/header.html&quot; --&gt;
            ...rest of body...
        &lt;/body&gt;
    &lt;/html&gt;
                    </code></pre>
                </section>

                <section>
                    <h2>Using SSIs</h2>
                    <ul>
                        <li class="fragment">Put your common content in separate files in your 'inc' directory</li>
                        <li class="fragment">Add SSI directive to pages where you want included content to go</li>
                        <li class="fragment">Use '.shtml' extension for pages containing SSIs</li>
                        <li class="fragment">Upload to web server and view in browser</li>
                    </ul>
                </section>

                <section>
                    <h2>Next Class</h2>
                    <p><img src="img/css.jpg" alt="CSS Logo"></p>
                    <p><strong>Don't forget to logoff!</strong></p>
                </section>

            </div> <!-- .slides -->
        </div> <!-- .reveal -->

       <!--#include virtual="../inc/common-scripts.html" -->
    </body>
</html>