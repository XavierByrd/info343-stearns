<!doctype html>
<html>
    <head>
        <!--#include virtual="../inc/common-head.html" -->

        <meta name="description" content="INFO 343 AJAX and Mashups Lab">
        <title>Lab 7: Recent Earthquakes Map</title>
    </head>
    <body>
        <div class="container">

            <!--#include virtual="../inc/crumbtrail.html" -->

            <article class="lab">

                <section id="intro">
                    <div class="page-header lab-title">
                        <h1>Lab 7: Recent Earthquakes Map</h1>
                        <p class="lead">AJAX and Mashups</p>
                    </div>

                    <p>In class this week, we learned how to dynamically fetch information from a web server while staying on the same web page (AJAX). Last week, we learned how to embed a live Google Map into our web page, centered on our current coordinates. In this lab, we will combine these two techniques to create a live map that plots sample earthquake data provided by the US Geological Survey, which we will fetch using AJAX.</p>

                    <h2>General Instructions</h2>
                    <ol>
                        <li>If you get stuck at any point, search the Internet, ask your neighbor, or ask the TA for help.</li>

                        <li>At the end of the lab, submit your published site URL via the Canvas assignment for this lab (<a href="https://canvas.uw.edu/courses/849701/assignments/2288932">Section A</a> &diams; <a href="https://canvas.uw.edu/courses/873608/assignments/2299194">Section B</a>).</li>

                        <li>If you don't finish all the required tasks during our lab time, finish them over the weekend and submit your published site URL before 8:00am on Monday morning.</li>

                        <li>If you finish all the required steps, go on and try some of the <a href="#optional-steps">optional ones</a>. Remember that you have to do at least one of the optional steps in order to get 10/10 on the Completeness portion of your grade. If you do only the required steps, you'll get 9/10 on that portion.</li>
                    </ol>

                    <h2>Required Steps</h2>
                    <ol>
                        <li><a href="#fork">Fork my lab7 repository and clone to your lab machine</a></li>

                        <li><a href="#code">Write the JavaScript for the Page</a></li>

                        <li><a href="#github">Stage, Commit, and Push to GitHub</a></li>

                        <li><a href="#submit">Publish your site to your web hosting server and submit the site URL via Canvas</a></li>
                    </ol>
                </section>

                <section id="fork">
                    <h2>Fork and Clone</h2>

                    <p>First, go to <a href="https://github.com" target="_blank">GitHub</a> and sign into your account.</p>

                    <p>Next, go to my <a href="https://github.com/drstearns/lab7" target="_blank">lab7 repository on GitHub</a>, and fork it. Then clone <strong>your forked repository</strong> to your local lab machine using SourceTree. You've done this several times now, but if you've forgotten how, refer to the instructions in <a href="../forms/">our previous lab</a>.</p>
                </section>

                <section id="code">
                    <h2>Write the JavaScript</h2>

                    <p>Before we get to writing code, let's look at the page we will be building today:</p>

                    <p><img class="screen-shot img-responsive" src="img/quake-map.png" alt="screen shot of quake map page"></p>

                    <p>This page uses AJAX to get the set of recent earthquakes, and the Google Maps API to plot them on an interactive map. The earthquake data is provided by the USGS, though I should admit that this is not actually <em>live</em> data&mdash;instead, this is sample data returned by the <a href="http://dev.socrata.com/consumers/getting-started">Socrata Open Data API (SODA)</a>, which they use as demo data for their service. SODA provides programmatic access to lots of open public datasets, so the techniques you learn in this lab should enable you to do something similar with <a href="https://data.seattle.gov/">other datasets they offer</a>.</p>

                    <p>In addition to plotting the quakes on the Google Map, we will also write the code to show an information window with details about the quake when the user clicks on the marker. This will look like so:</p>

                    <p><img class="screen-shot img-responsive" src="img/quake-info.png" alt="screen shot of quake info window"></p>

                    <p class="alert alert-info">As per usual, there are some optional steps for this lab, one of which involves adding a minimum magnitude filter and refresh button. See the <a href="#optional-steps">optional steps</a> for more details.</p>

                    <p>Let's build this page, step-by-step.</p>

                    <h3>Review the HTML File</h3>

                    <p>Before we start writing JavaScript, let's take a quick look at the 'index.html' file in the project's root folder. I've provided the markup for you, as there's not all that much that needs to be included. The visible content in the <code>&lt;body&gt;</code> section is this:</p>

                    <pre><code>
&lt;h1&gt;Earthquakes Recorded Over the Last 7 Days&lt;/h1&gt;
&lt;p class=&quot;data-description&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;map-container&quot;&gt;&lt;/div&gt;
                    </code></pre>

                    <p>There is an empty paragraph with the class 'data-description', and this will be used to show some information to the reader after we've plotted the quakes on the map.</p>

                    <p>The empty <code>&lt;div&gt;</code> element is where we will put the Google map, and we've given it a class name of 'map-container'.</p>

                    <p>There are also a few <code>&lt;script&gt;</code> elements, the first of which is for the Google Maps library:</p>

                    <pre><code>
&lt;!-- Google Maps API library --&gt;
&lt;!-- NOTE: the vale in the &#039;key&#039; query string parameter is my API key
        you should register for your own key and replace this value
        go to https://code.google.com/apis/console
--&gt;
&lt;script src=&quot;https://maps.googleapis.com/maps/api/js?key=AIzaSyAqnfFcZYL5k3Tav9kCUmZOSC-42yJupmc&amp;amp;sensor=false&quot;&gt;&lt;/script&gt;
                    </code></pre>

                    <p>As I noted in the commetns, the key query string parameter value is my Google API Key. If you've <a href="https://code.google.com/apis/console">created your own Google API key</a>, you might want to replace the key currently in this url with yours. Google limits the number of map requests to 25,000 per key per day, so using your own key will enable you to have many more requests than using my shared key.</p>

                    <h3>Write a Document Ready Function</h3>

                    <h3>Write a Function to Get the Earthquake Data</h3>

                    <h3>Write a Function to Build the Map and Add the Markers</h3>

                    <h3>Add Code to Show the Info Windows</h3>

                </section>

                <section id="github">
                    <h2>Stage, Commit, and Push to GitHub</h2>

                    <!--#include virtual="../inc/commit.html" -->
                </section>

                <section id="submit">
                    <h2>Publish Site and Submit URL via Canvas</h2>

                    <!--#include virtual="../inc/publish.html" -->

                    <p>After you've published your site and verified that it's working, <strong>submit your published site URL via the Canvas assignment for this lab (<a href="https://canvas.uw.edu/courses/849701/assignments/2288932">Section A</a> &diams; <a href="https://canvas.uw.edu/courses/873608/assignments/2299194">Section B</a>)</strong>.</p>
                </section>

                <section id="optional-steps">
                    <h2>Optional Steps</h2>

                    <p>If you get done early, or just want the extra challenge, try some of these optional steps.</p>
                </section>

            </article>

        </div> <!-- .container -->
    </body>
</html>