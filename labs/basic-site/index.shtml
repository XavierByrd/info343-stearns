<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="INFO 343 Basic Site Lab">
    <meta name="author" content="David Stearns">
    <link rel="shortcut icon" href="https://ischool.uw.edu/favicon-small.png">

    <link rel="stylesheet" href="../../lib/bootstrap/css/bootstrap.min.css" media="screen">
    <link rel="stylesheet" href="../../css/footer.css">

    <link rel="stylesheet" href="../css/labs.css">

    <title>Lab 2: Building a Basic Web Site</title>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="../../lib/html5shiv/html5shiv.js"></script>
      <script src="../../lib/respond/respond.min.js"></script>
    <![endif]-->

    
</head>
<body>
    <div class="container">

    <!--#include virtual="../inc/crumbtrail.html" -->

    <article class="lab">

        <div class="page-header lab-title">
            <h1>Lab 2: Building a Basic Web Site</h1>
            <p class="lead">HTML, CSS, and Server-Side Includes</p>
        </div>

        <p>In our previous lab, we practiced using various tools and techniques for managing our files, but we didn't worry all that much about what was <em>inside</em> those files. In this lab, you will practice the following skills, which we learned this week:</p>

        <ul>
            <li>Writing a well-formed, semantically-correct series of related HTML files</li>
            <li>Segmenting content that is common to all pages into server-side includes</li>
            <li>Styling your HTML with basic CSS</li>
        </ul>

        <h2>General Instructions</h2>
        <ol>
            <li>If you get stuck at any point, search the Internet, ask your neighbor, or ask the TA for help.</li>

            <li>At the end of the lab, submit your published site URL via the Canvas assignment for this lab (<a href="https://canvas.uw.edu/courses/849701/assignments/2288919">Section A</a>; <a href="https://canvas.uw.edu/courses/873608/assignments/2299187">Section B</a>).</li>

            <li>If you don't finish all the required tasks during our lab time, finish them over the weekend and submit your published site URL before 8:00am on Monday morning.</li>

            <li>If you finish all the required steps, go on and try some of the optional ones.</li>
        </ol>

        <h2>Required Steps</h2>
        <ol>
            <li><a href="#form">Fork the lab2 repository and clone to your lab machine</a></li>

            <li><a href="#pages">Build and Style the HTML Pages</a></li>
            
            <li><a href="#publish">Publish your site to your student web hosting server and submit the site URL via Canvas</a></li>
        </ol>

        <h3 id="fork">Fork and Clone</h3>

        <p>Sign in to <a href="https://github.com">GitHub</a>.</p>

        <p>Go to the <a href="https://github.com/drstearns/lab2">lab2 repository on GitHub</a>, and fork it. Yes, you read that correctly. I want you to fork my repo...seriously, web developers do talk like this.... Click the "Fork" button at the top-right of the page and follow the instructions. This will create a copy of this repository in your own account so that you have something to start with. The repository contains the images you'll need, as well as a "reset.css" file.</p>

        <p>Once you've forked the repository, clone it to your local lab machine using SourceTree. We did this in <a href="../filemgmt/">our previous lab</a>, so you should know how to do this. If you've forgotten, or didn't make it to the last lab, ask your neighbor or your TA for help.</p>

        <h3 id="pages">Build and Style the HTML Pages</h3>

        <p>Now that you have a local clone of your repository, you'll next build and style the HTML pages for the site. You'll build three pages for the "Widgets-R-Us" corporate web site: a home page (index.html), a products page (products.html), and an about page (about.html). Each page should link to your main stylesheet ('css/styles.css') which I have started for you.</p>

        <p>The main stylesheet has three @include directives at the top. The first two include the Google web fonts <a href="http://www.google.com/fonts#QuickUsePlace:quickUse/Family:Boogaloo">'Boogaloo'</a> and <a href="http://www.google.com/fonts#QuickUsePlace:quickUse/Family:Open+Sans">'Open Sans'</a>. We'll use Boogaloo only for the corporation name (Widgets-R-Us), and we'll use Open Sans for all the rest of the text on the site.</p>

        <p>The other @include directive adds another stylesheet named 'reset.css', which is quite handy. Different browsers have different defaults for things like margins, paddings, borders, and alignments, so this CSS file will reset all of those, giving you a clean slate upon which to apply your own styles.</p>

        <p>I include sample screen shots below for the various pages and common content, and you should strive to get your versions looking as close to these screen shots as possible. They don't need to match <em>exactly</em> but try to get them as close as you can.</p>

        <p>Each of the three site pages will also have the same header and footer content, so we'll put those into separate files and include them in each page using server-side includes.</p>

        <p>Let's start by building the include files. In your local repository, create a directory named 'inc'. This is where we'll put files with common content that we'll include into our main pages.</p>

        <h4>Common Header Content</h4>
        
        <p>Create a new file in your text editor and save it in your 'inc' directory as 'header.html'. This will contain the following content shown at the top of each page:</p>

        <p><img src="img/header-content.png" alt="Header content screen shot" class="img-responsive screen-shot"></p>

        <p>The gears image is in your 'img' directory in the file name 'logo.png'.</p>

        <p>The company name ('Widgets-R-Us') should use the 'Boogaloo' font in 36px, with the color #116189. All other text on the site should use 'Open Sans'.</p>

        <p>The motto ('Making high-quality widgets since 1991') should be in italics and slightly larger than normal (120%).</p>

        <p>The orange (#D74710) bar with 'Home', 'Products', and 'About' is a site navigation bar, and each one of those labels should be a hyperlink to its respective page (index.html, products.html, about.html). When the user hovers the mouse over the links, the background color should change to a lighter shade (#FF9D45). Note that the links are white and not underlined at all.</p>

        <p>Note also that the navbar itself has slightly rounded corners.</p>

        <h4>Common Footer Content</h4>

        <p>Create a new file in your text editor and save it in your 'inc' directory as 'footer.html'. This will contain the following content shown at the bottom of each page:</p>

        <p><img src="img/footer-content.png" alt="Footer content screen shot" class="img-responsive screen-shot"></p>

        <p>The text in the footer should use the 'Open Sans' font in italics, and be sized at 80%.</p>

        <p>Note that the "email us" part of the text should be a hyperlink that when clicked, opens a new email message addressed to 'sales@widgetsrus.com'. The link should be a dark blue color, and not be underlined until the user hovers the mouse over it.</p>

        <h4>The Home Page</h4>

        <p>Create a new file in your text editor and save it in the root directory of your repository as 'index.html'. This will contain the content for the following home page:</p>

        <p><img src="img/home-screen.png" alt="Home screen shot" class="img-responsive screen-shot"></p>

        <p>The background of this page is a texture already in your 'img' directory in the file 'texture-light.png'. Use this as the background-image for the body.</p>

        <p>The main page content goes in a white box that should be sized to 80% of the body, and horizontally centered. It should also have a very subtle box shadow, similar to what is shown in the screen shot.</p>

        <p>You've already created the common header and footer files, so use <a href="http://httpd.apache.org/docs/current/howto/ssi.html">server-side includes</a> to include those into the page at the appropriate place.</p>

        <p>The picture of the factory is already in your 'img' directory in the file named 'factory.jpg'. The Free Shipping picture is also in your 'img' directory in the file named 'free-shipping.jpg'. These images should float to the left and right respectively, so that the text flows around them.</p>

        <p>The rest of the text is just lorem ipsum text, which you can generate in Sublime (type 'lorem' and hit tab), or via a <a href="http://www.lipsum.com/">lorem ipsum generator site</a>.</p>

        <h4>The Products Page</h4>

        <p>Create a new file in your text editor and save it in the root directory of your repository as 'products.html'. This will contain the content for the following products page:</p>

        <p><img src="img/products-screen.png" alt="Products screen shot" class="img-responsive screen-shot"></p>

        <p>This page should have the same background and white content box as the home page.</p>

        <p>The ordering instructions banner message below the nav bar should use a background color of #FBEAE3, and the "Send us email" part of the text should be a hyperlink that when clicked, opens a new email message addressed to 'sales@widgetsrus.com'. The link should not be underlined until the user hovers the mouse over it.</p>

        <p>The gear images are in your 'img' directory, named 'basic-widget.png', 'super-widget.png', and 'super-duper-widget.png'.</p>

        <h4>The About Page</h4>

        <p>Create a new file in your text editor and save it in the root directory of your repository as 'about.html'. This will contain the content for the following about page:</p>

        <p><img src="img/about-screen.png" alt="About Us screen shot" class="img-responsive screen-shot"></p>

        <p>Again, the background and white content box should be the same as on the home and products pages.</p>

        <p>The content of this page is divided into two sections, 'Our Story' and 'Our Team'. The story can just be a couple of paragraphs of lorem text.</p>

        <p>The 'Our Team' section should appear similar to the screen shot, and the generic lego person image is in your 'img' directory as 'person.jpg'.</p>

        <h3 id="publish">Commit, Publish, and Submit</h3>

        <p>Once you have your pages looking like the screen shots, and the hyperlinks in the nav bar taking you to the correct pages, you're now ready to commit and push your files to GitHub, publish them to your student web hosting server, and submit the URL via the Canvas assignment for grading.</p>

        <p>Use SourceTree to commit your files to the local repository, and then push those changes up to GitHub.</p>

        <p>Use FileZilla to FTP your files to a new directory on your student web hosting server (e.g., /info343/lab2), or you can SSH to the server and use the <code>git clone</code> command to deploy your site.</p>

        <p>After you've verified that your published site is working properly, copy and paste the site URL into the Canvas submission field for this lab assignment (<a href="https://canvas.uw.edu/courses/849701/assignments/2288919">Section A</a>; <a href="https://canvas.uw.edu/courses/873608/assignments/2299187">Section B</a>).</p>

        <p>If you've finished early, go on and try some of the following optional steps.</p>

        <h2>Optional Steps</h2>
        <ol>
            <li></li>
            <li></li>
        </ol>


    </article>
    </div> <!-- .conatiner -->

</body>
</html>