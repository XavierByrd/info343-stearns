<!doctype html>
<html lang="en">
<head>
    <!--#include virtual="../inc/common-head.html" -->
    <meta name="description" content="Notes for Intro to jQuery Lecture">
    <title>The jQuery Library</title>
</head>
<body>

    <div class="container">

        <!--#include virtual="../inc/crumbtrail.html" -->
            
        <div class="page-header notes-header">
            <h1>Your Friend, the jQuery Library</h1>
            <p class="lead">Dr David Stearns, Autumn 2013</p>
        </div>

        <ol class="lecture-outline">
            <li>Coming Up...
                <ol>
                    <li>Friday Oct 25
                        <ol>
                            <li>Lab 5: <a href="../../labs/jquery/">Sortable Address Book</a></li>
                        </ol>
                    </li>
                    <li>Tues Oct 29
                        <ol>
                            <li>HTML Forms and Scripting</li>
                            <li>Please Read...
                                <ol>
                                    <li><a href="http://www.htmldog.com/guides/html/beginner/forms/">Forms Tutorial</a></li>
                                    <li><a href="http://diveintohtml5.info/forms.html">A Form of Madness</a></li>
                                </ol>
                            </li>
                        </ol>
                    </li>
                </ol>
            </li>

            <li>Today
                <ol>
                    <li>What is the jQuery Library?</li>
                    <li>How do you use jQuery?</li>
                    <li>Running Code when the Page is Ready</li>
                    <li>Finding Elements and Traversing the Element Tree</li>
                    <li>Handling Events</li>
                    <li>Manipulating Elements, Attributes, and Styles</li>
                    <li>Animation Effects in jQuery</li>
                </ol>
            </li>

            <li>In-Class Coding Repository
                <ol>
                    <li><a href="https://github.com/drstearns/in-class-code-a">Section A (8:30)</a></li>
                    <li><a href="https://github.com/drstearns/in-class-code-b">Section B (10:30)</a></li>
                </ol>
            </li>

            <li>What is the jQuery Library?
                <ol>
                    <li>A big-ol' file containing a bunch of JavaScript</li>

                    <li>Sits in between your code and the raw DOM API
                        <img src="img/jquery.png" alt="jQuery block diagram" class="img-responsive">
                    </li>

                    <li>Provides a number of helpful features:
                        <ol>
                            <li>Consistent and easier-to-use API that works in all browsers</li>

                            <li>Powerful methods for finding elements in the page that you want to adjust
                                <ol>
                                    <li>uses CSS selector syntax, which you already know!</li>

                                    <li>no need to use <code>id</code> attributes; selection by <code>class</code> attribute is just as easy</li>
                                </ol>
                            </li>

                            <li>Very powerful methods for adjusting sets of elements all at once</li>

                            <li>Easy to register event handlers for all the common events</li>

                            <li>Provides a few animation effecs to make your pages feel more responsive and playful</li>
                        </ol>
                    </li>
                </ol>
            </li>

            <li>Using jQuery
                <ol>
                    <li>Add a <code>&lt;script&gt;</code> element to your page, and set the <code>src</code> attribute to the jQuery CDN (https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js)
                        <pre><code>
&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;
                        </code></pre>
                    </li>

                    <li><a href="http://jquery.com/download/">Download the jQuery files</a>, add them to your project's 'lib' sub-folder, and set the <code>&lt;script&gt;</code> element's <code>src</code> attribute to point to your project's copy</li>

                    <li>jQuery creates one function/object in the global space named <code><a href="http://api.jquery.com/">jQuery</a></code>, which has lots of methods, many of which I will show you as we go through class today</li>

                    <li>They also define <code>$</code> as an alias for <code>jQuery</code>, so you can use that as a short-hand reference (less typing)</li>
                </ol>
            </li>

            <li>Running Code Once the Page is Ready
                <ol>
                    <li>JavaScript at the global scope (i.e., not inside a function) will run as soon as it is parsed</li>

                    <li>But that might be too early; not all the elements may be ready for manipulation at that point</li>

                    <li>Browsers raise various events to signal that the DOM is ready, and jQuery gives you one handy document.ready event that works across all browsers</li>

                    <li>You register a function you want jQuery to call when the document is ready</li>

                    <li>Explicit syntax:
                        <pre><code>
function onReady() {
    //...code to run on ready
}

$(document).ready(onReady);
                        </code></pre>
                        or with an in-line anonymous function:
                        <pre><code>
$(document).ready(function() {
    //...code to run on ready
});                            
                        </code></pre>
                    </li>

                    <li>Implicit (and shorter) syntax:
                        <pre><code>
$(function() {
    //...code to run on ready 
});
                        </code></pre>
                    </li>
                </ol>
            </li>

            <li><a href="http://api.jquery.com/category/selectors/">Finding</a>
                <ol>
                    <li>Your code in the document ready function will generally want to find various elements on the page so that you can manipulate them or register events on them (e.g., click, keypress, hover, etc)</li>

                    <li>The raw DOM encourages you to give these elements IDs and then get them using <code>document.getElementById()</code>, but jQuery is designed to work more like CSS selectors</li>

                    <li>To get an element with the class name 'motto', you write:
                        <pre><code>
var jElems = $(&#039;.motto&#039;);
                        </code></pre>
                    </li>

                    <li>To get a <code>button</code> element sitting inside a <code>&lt;div class="foo"&gt;</code> element, you write:
                        <pre><code>
var jElems = $('.foo button');        
                        </code></pre>
                    </li>

                    <li>You can also use the pseudo-selectors like :first-of-type; see their full <a href="http://api.jquery.com/category/selectors/">selectors reference</a> for all the various selectors you can use</li>

                    <li>Key is that these expressions will select all elements that match the selector, just like CSS</li>

                    <li>The returned value is a jQuery object that represents all elements that matched the selector; all methods called on this object will effect <strong>all elements that were selected</strong></li>

                    <li>This is especially handy when registering a common event handler function for a set of related objects (e.g., button group, or all fields in form)</li>

                    <li>To know how many elements are in the set, check the <code>length</code> property</li>

                    <li>To get just the first element, use the <code>first()</code> method</li>

                </ol>
            </li>

            <li><a href="http://api.jquery.com/category/traversing/">Traversing</a>
                <ol>
                    <li>Once you've found one or more elements, you can also find and traverse the element tree from there</li>

                    <li>Use <code>children()</code> to find for immediate child elements that match a selector</li>

                    <li>Use <code>find()</code> to find all descendants that match a selector</li>

                    <li>Use <code>siblings()</code> to find all siblings that match a selector</li>

                    <li>Use <code>parent()</code> to get the immediate parent element(s) of the current set (optionally filtered using a selector)</li>

                    <li>Use <code>parents()</code> to find all ancestors that match a selector</li>

                </ol>
            </li>

            <li><a href="http://api.jquery.com/category/events/">Handling Events</a>
                <ol>
                    <li>JavaScript in the global scope is executed as soon as the file is parsed; the rest of your code execution is all event-based, meaning that you write code that runs when some event happens</li>

                    <li>Most events are generated in response to user interaction (keypress, click, scroll, resize, etc.)
                        <ol>
                            <li>These events are raised from the element being interacted with</li>

                            <li>You register a function to be called in response to this event by calling a jQuery method with the same name as the event (click, keypress, scroll, resize, etc)
                                <pre><code>
$(&#039;.sort-button&#039;).click(function(evt){
    //code to respond to the click event
    //evt param is a jQuery Event object
    //with info about the event itself
});
                                </code></pre>
                            </li>

                            <li>During the event handler function, the <code>this</code> keyword is set to refer to the element in question</li>

                            <li>Note that <code>this</code> refers to the underlying DOM element, not a jQuery-wrapped version of that element, so you often will want to convert <code>this</code> to a jQuery object using <code>var jelem = $(this);</code></li>

                            <li>Every event handler is passed a reference to the <a href="http://api.jquery.com/category/events/event-object/">jQuery Event object</a> as the first parameter; this provides lots of info about the event itself, such as which keys wee pressed, which mouse button was clicked, where the mouse is on the screen, etc.</li>
                        </ol>
                    </li>

                    <li>Other events are generated in response to things happening in the system (timer fires, network request completes, etc); we will investigate these more when we get to AJAX</li>

                </ol>
            </li>

            <li><a href="http://api.jquery.com/category/manipulation/">Manipulating</a>
                <ol>
                    <li>Once you find the element(s) you want, you can use jQuery methods to manipulate them in interesting ways</li>

                    <li>Use <code>addClass()</code>, <code>removeClass()</code>, and <code>toggleClass()</code> to adjust the <code>class</code> attribute of the element(s)</li>

                    <li>Use <code>css()</code> to alter individual style properties</li>

                    <li>Use <code>attr()</code> to get or set other attributes on the element(s)</li>

                    <li>Use <code>append()</code> to append new content to the element(s)</li>

                    <li>Use <code>empty()</code> to completely clear out an element's content</li>

                    <li>Use <code>html()</code> to change the element's HTML content; use <code>text()</code> to just change the text</li>

                    <li>Use <code>hide()</code>, <code>show()</code>, and <code>toggle()</code> to hide/show the elements</li>

                    <li>Use <code>clone()</code> to clone the element(s) and their descendants</li>

                    <li>Use <code>position()</code> and <code>offset()</code> to get the element's position relative to its offset parent and the page respectively</li>

                    <li>Use <code>scrollLeft()</code> and <code>scrollTop()</code> to determine current scroll position</li>

                    <li>Use <code>width()</code> and <code>height()</code> to get width and height measurements of the element</li>

                </ol>
            </li>

            <li><a href="http://api.jquery.com/category/effects/">Animation Effects</a>
                <ol>
                    <li>In addition to simple and immediate hiding and showing, jQuery offers a few animation effects as well</li>

                    <li>Use <code>fadeIn()</code> and <code>fadeOut()</code> to fade elements in and out (adjusts opacity over a length of time)</li>

                    <li>Use <code>slideDown()</code> and <code>slideUp()</code> to slide elements in from above or below</li>

                    <li>Use <code>animate()</code> to do your own custom animations</li>
                </ol>
            </li>

        </ol> <!-- lecture -->

    </div> <!-- .container -->

</body>
</html>
