<!doctype html>
<html lang="en">
<head>
    <!--#include virtual="../inc/common-head.html" -->
    <meta name="description" content="Notes for CSS Tools and Frameworks Lecture">
    <title>CSS Tools and Frameworks</title>
</head>
<body>

    <div class="container">

        <!--#include virtual="../inc/crumbtrail.html" -->
            
        <div class="page-header notes-header">
            <h1>Don't Reinvent the Wheel: CSS Tools and Frameworks</h1>
            <p class="lead">Dr David Stearns, Autumn 2013</p>
        </div>

        <ol class="lecture-outline">
            <li>Coming Up...
                <ol>
                    <li>Friday Oct 18
                        <ol>
                            <li>Lab 4: Skinning your Site with Bootstrap</li>
                        </ol>
                    </li>

                    <li>Tuesday Oct 22
                        <ol>
                            <li>Intro to JavaScript</li>
                            <li><em>Please read these</em>
                                <ol>
                                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript">A Re-Introduction to JavaScript</a></li>
                                    <li><a href="http://net.tutsplus.com/tutorials/javascript-ajax/javascript-and-the-dom-series-lesson-1/">JavaScript and the DOM</a></li>
                                </ol>
                            </li>
                            <li><em>If you're interested in JavaScript, watch this...</em>
                                <ol>
                                    <li><a href="http://www.youtube.com/watch?v=lTWGoL1N-Kc">Douglass Crockford on JavaScript</a></li>
                                </ol>
                            </li>
                        </ol>
                    </li>
                </ol>
            </li>

            <li>Today: CSS Tools and Frameworks
                <ol>
                    <li>What is a Framework?</li>
                    <li>The Bootstrap Framework</li>
                    <li>Customizing and Extending Bootstrap</li>
                    <li>Other Interesting Frameworks</li>
                    <li>In-Class Challenge!</li>
                </ol>
            </li>

            <li>What is a Framework?
                <ol>
                    <li>A set of CSS and JavaScript files that are pre-made by tallented and experienced designers</li>

                    <li>Their CSS applies a base set of styles to HTML elements for attractive fonts, margins, padding, colors, etc.</li>

                    <li>Their CSS also defines a set of style classes that you can apply to your HTML elements to get particular effects without having to write it yourself (<code>class="alert"</code>)</li>

                    <li>Often include a set of user-interface "widgets" like navigation bars, drop-downs, modal dialogs, carousels, etc
                        <ol>
                            <li>you attach a style class and their JavaScript handles all the user-interaction</li>

                            <li>your own JavaScript can add or enhance base functionality</li>
                        </ol>
                    </li>

                    <li>Built for and tested in all major browsers currently in service (though bugs are always a possibility)</li>

                    <li>Many are now incorporating responsive and mobile-first designs</li>

                    <li>So why did we learn raw CSS? Why not just use these from the beginning?
                        <ol>
                            <li>Frameworks are frameworks, not full solutions; you will want to write additional CSS to customize, override, and extend</li>
                            
                            <li>Frameworks sometimes do things you don't want, so you need to know raw CSS to override</li>

                            <li>Frameworks can increase load time for simple pages that don't need everything in the framework</li>

                            <li>Frameworks can become a crutch or a straightjacket if you're not careful, limiting your ability to achieve novel designs</li>
                        </ol>
                    </li>

                </ol>
            </li>

            <li>Using the <a href="http://getbootstrap.com/getting-started/">Bootstrap</a> Framework
                <ol>
                    <li>Bootstrap is made by the good folks at Twitter, and is freely available</li>

                    <li>Version 3.0.0 was designed to be mobile-first and responsive</li>

                    <li>Two ways to incude it
                        <ol>
                            <li id="hotlink">"Hot link" to their files on their <dfn>Content Delivery Network (CDN)</dfn>
                                <pre><code>
&lt;!-- add this link to their core stylesheet in your &lt;head&gt; section  --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;&gt;

&lt;!-- add these script links at the bottom of your &lt;body&gt; section
(allows your page to render while the browser downloads and parses the JavaScript) --&gt;
&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;
                                </code></pre>
                            </li>

                            <li><a href="https://github.com/twbs/bootstrap/releases/download/v3.0.0/bootstrap-3.0.0-dist.zip">Download their distribution files</a> to a 'bootstrap-3.0.0' directory in your project's 'lib' sub-directory, add the same two elements, but point them towards your downloaded versions (these specific directory names are not required, but it's a good idea to keep framework files in a 'lib' sub-directory, and to include the version number in framework directory name so that new parts of your site can start using the next version without breaking your existing pages)
                                <pre><code>
&lt;!-- add this link to their core stylesheet in your &lt;head&gt; section  --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;lib/bootstrap-3.0.0/css/bootstrap.min.css&quot;&gt;

&lt;!-- add these script links at the bottom of your &lt;body&gt; section
(allows your page to render while the browser downloads and parses the JavaScript) --&gt;
&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;lib/bootstrap-3.0.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;
                                </code></pre>
                            </li>

                            <li>Hot link approach is good for browser caching; if reader has previously visited another page that hot links to Bootstrap then CSS and JavaScript files are already in the browser's cache</li>

                            <li>Hot link also gets you latest-greatest version with bug fixes, but it also introduces a risk: what if their bug fix introduces a different problem in your site?</li>

                            <li>Download to 'lib' directory gives you more control and consistency, but you have to manually patch if they release a bug fix</li>

                            <li>In either case, you are using their "<dfn>minified</dfn>" versions (.min.css and .min.js), which have extra white space removed, and JavaScript variables are all renamed to one or two letters to reduce file size</li>
                        </ol>
                    </li>

                    <li>Once included, they will apply lots of base styles for fonts, colors, margins, spacing, hyperlinks, etc.</li>

                    <li>But the real power comes when you start using <a href="http://getbootstrap.com/css/">their style classes</a>
                        <ol>
                            <li><a href="http://getbootstrap.com/css/#overview-container">Container</a>
                                <ol>
                                    <li>Creates a cetered content box that resizes according to their breakpoints</li>

                                    <li>Use a div with <code>class="container"</code></li>
                                </ol>
                            </li>

                            <li><a href="http://getbootstrap.com/css/#grid">The Grid</a>
                                <ol>
                                    <li>12-column flexible and responsive layout system</li>

                                    <li>each column you create can consume 1 to 12 of their available grid columns</li>

                                    <li>columns sit side-by-side on large monitors and revert to stacked as the size reduces</li>

                                    <li>columns can be nested if needed</li>
                                </ol>
                            </li>

                            <li>A ton of really useful <a href="http://getbootstrap.com/components/">components</a></li>

                            <li>A few useful <a href="http://getbootstrap.com/javascript/">interactive components</a></li>

                        </ol>
                    </li>

                </ol>
            </li>

            <li>Customizing and Extending Bootstrap
                <ol>
                    <li>The "Cascade" part of Cascading Style Sheets (CSS)
                        <ul>
                            <li>So far, we've been adding only one stylesheet to a given page, but you can actually add as many as you want
                                <pre><code>
&lt;!-- Bootstrap styles, applied first --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;lib/bootstrap-3.0.0/css/bootstrap.min.css&quot;&gt;
&lt;!-- your custom styles, which can override or extend Bootstrap styles --&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;css/styles.css&quot;&gt;
                                </code></pre>
                            </li>
                            
                            <li>Browsers apply styles in the order they appear in the source files, accumulating and overriding property settings
                                <ol>
                                    <li>each <code>&lt;link rel="stylesheet" ...&gt;</code> is processed before the next one in the HTML source</li>

                                    <li>all style rules in a given style sheet are evaluated and applied in the order they appear</li>

                                    <li>new properties are added to the overall set of properties applied to a given element</li>

                                    <li>properties already applied can be overridden by a rule appearing later in the sources</li>
                                </ol>
                            </li>
                            
                            <li>This means that you can extend or override any styles defined in Bootstrap, or define entirely new style classes that are particular to your site/application but can be combined with Bootstrap styles</li>
                        </ul>
                    </li>

                    <li>Overriding and extending example: Better Bootstrap <code>alert</code> boxes
                    </li>

                    <li><a href="http://getbootstrap.com/customize/">Customizing via Bootstrap site</a>
                        <ol>
                            <li>adjust base properties (colors, fonts, margins, paddings, etc)</li>
                            <li>omit parts of the framework you won't need for faster download</li>
                        </ol>
                    </li>

                    <li>Customizing via LESS
                        <ol>
                            <li>Download <a href="https://github.com/twbs/bootstrap/archive/v3.0.0.zip">Bootstrap's full sources</a></li>
                            <li>Customize files in the 'less' sub-directory</li>
                            <li>Compile using LESS or <a href="http://twitter.github.io/recess/">Twitter Recess</a></li>
                        </ol>
                    </li>
                </ol>
            </li>

            <li>Other Interesting CSS Frameworks
                <ol>
                    <li><a href="http://foundation.zurb.com/">Foundation</a>: similar to Bootstrap and getting to be just as popular</li>
                    <li><a href="http://www.getskeleton.com/">Skeleton</a>: simpler than Bootstrap and Foundation, but also more lightweight</li>
                    <li><a href="http://html5boilerplate.com/">HTML5 Boilerplate</a>: really more of a basic template than a framework, but includes a few helper CSS classes and JavaScript libraries</li>
                </ol>
            </li>

            <li id="icc"><strong>In-Class Challenge!</strong>
                <ol>
                    <li>Build a page that uses Bootstrap <a href="#hotlink">via hotlinks</a></li>
                    <li>Add one or more of the following components to your page
                        <ol>
                            <li>A <a href="http://getbootstrap.com/components/#breadcrumbs">Breadcrumb list (aka crumb trail)</a> in a paragraph with the items 'Home', 'CSS', 'Frameworks'. Just use '#' for the <code>href</code> attribute in the <code>&lt;a&gt;</code> elements wrapping the crumb trail items</li>

                            <li>A <a href="http://getbootstrap.com/components/#page-header">Page Header</a> with the text 'Welcome to Bootstrap'.</li>

                            <li>A <a href="http://getbootstrap.com/components/#jumbotron">Jumbotron</a> with whatever content you want to add. If you can't think of anything, copy and paste their example content and change the content in some way.</li>

                            <li>Two <a href="http://getbootstrap.com/css/#buttons">Buttons</a> in a paragraph: one with the text 'Save' using the 'btn btn-primary' style class; and one with the text 'Delete' using the 'btn btn-danger' style class</li>

                            <li>A <a href="http://getbootstrap.com/components/#btn-groups">Button Group</a> with buttons that read 'English', 'Español', 'Français'</li>

                            <li>A <a href="http://getbootstrap.com/components/#btn-dropdowns">Dropdown Button</a> with the text 'Language' using the 'btn btn-default' style class that when clicked shows a drop-down menu with the items 'English', 'Español', 'Français'. Just use '#' for the <code>href</code> attributes in the <code>&lt;a&gt;</code> elements wrapping the menu items</li>

                            <li>A <a href="http://getbootstrap.com/components/#list-group-badges">List Group with Badges</a>, with the items 'Inbox', 'Later', and 'Spam', each of which should have a badge with some number (like unread messages) as in the example.</li>

                            <li>Once you've added all these, check out the <a href="http://getbootstrap.com/components/">rest of their components</a> and continue adding those you like. If you know a bit of JavaScript, you could also check out their <a href="http://getbootstrap.com/javascript/">interactive components</a>.</li>

                            <li>When you're done, submit your page (just the .html file) via the In-Class Challenge assignment in Canvas (<a href="https://canvas.uw.edu/courses/849701/assignments/2338042">Section A</a> | <a href="https://canvas.uw.edu/courses/873608/assignments/2338047">Section B</a>)</li>

                        </ol>
                    </li>
                </ol>
            </li>


        </ol>

    </div> <!-- .container -->

</body>
